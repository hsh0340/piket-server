generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  no                 Int                  @id @default(autoincrement()) @db.UnsignedInt
  email              String               @unique(map: "email") @db.VarChar(50)
  loginType          Int                  @map("login_type") @db.UnsignedTinyInt
  roleType           Int                  @default(0) @map("role_type") @db.UnsignedTinyInt
  createdAt          DateTime             @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt          DateTime             @default(now()) @map("updated_at") @db.DateTime(0)
  deletedAt          DateTime?            @map("deleted_at") @db.DateTime(0)
  brand              Brand[]
  userAuthentication UserAuthentication[]

  @@map("user")
}

model UserAuthentication {
  id                Int       @id @default(autoincrement()) @db.UnsignedInt
  userNo            Int       @map("user_no") @db.UnsignedInt
  password          String?   @db.VarChar(255)
  name              String    @db.VarChar(30)
  cellPhone         String    @unique(map: "cell_phone") @map("cell_phone") @db.VarChar(30)
  sex               Int       @db.UnsignedTinyInt
  tosAgree          Int       @map("tos_agree") @db.UnsignedTinyInt
  personalInfoAgree Int       @map("personal_info_agree") @db.UnsignedTinyInt
  ageLimitAgree     Int       @map("age_limit_agree") @db.UnsignedTinyInt
  mailAgree         Int       @map("mail_agree") @db.UnsignedTinyInt
  notificationAgree Int       @map("notification_agree") @db.UnsignedTinyInt
  createdAt         DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt         DateTime  @default(now()) @map("updated_at") @db.DateTime(0)
  deletedAt         DateTime? @map("deleted_at") @db.DateTime(0)
  user              User      @relation(fields: [userNo], references: [no], onDelete: NoAction, onUpdate: NoAction, map: "user_authentication_user_no_FK")

  @@index([userNo], map: "user_authentication_user_no_FK")
  @@map("user_authentication")
}

model Brand {
  id            Int           @id @default(autoincrement()) @db.UnsignedInt
  advertiserNo  Int           @map("advertiser_no") @db.UnsignedInt
  categoryId    Int           @map("category_id") @db.UnsignedInt
  name          String        @db.VarChar(20)
  description   String?       @db.VarChar(60)
  createdAt     DateTime      @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt     DateTime      @default(now()) @map("updated_at") @db.DateTime(0)
  user          User          @relation(fields: [advertiserNo], references: [no], onDelete: NoAction, onUpdate: NoAction, map: "brand_advertiser_no_FK")
  brandCategory BrandCategory @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "brand_category_id_FK")

  @@unique([categoryId, name], map: "category_id")
  @@index([advertiserNo], map: "brand_advertiser_no_FK")
  @@map("brand")
}

model BrandCategory {
  id        Int      @id @default(autoincrement()) @db.UnsignedInt
  name      String   @unique(map: "name") @db.VarChar(20)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt DateTime @default(now()) @map("updated_at") @db.DateTime(0)
  brand     Brand[]

  @@map("brand_category")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model test {
  id    Int @id @default(autoincrement())
  agree Int
}
